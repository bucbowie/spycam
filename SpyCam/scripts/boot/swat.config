#!/bin/bash
# name: swat.config
# desc: Hold user information.
# usage: source swat.config.
#
#-----------------------------#
# Server Hardware             #
#-----------------------------#
export ETHERNET_DEVICE="eth0"
export WIFI_DEVICE="wlan0"
export MY_ROUTER_NAME="DEV_survillence_Van"
export MY_ROUTER_PW="NoDrugs4U"
export MY_ROUTER_IP="192.168.1.1"
export MY_SERVER_WIFI_IP="192.168.1.184"
export MY_SERVER_STATIC_IP="192.168.1.194"
export MY_CAMERA_NAME="Main_Cam_`echo ${MY_SERVER_WIFI_IP}|cut -d"." -f4|sed 's/"//'`"
#-----------------------------#
# Peripheral Hardware         #
#-----------------------------#
export CELL_STATIC_IP="192.168.1.182"
export CELL_WIFI_MAC_ADDRESS="80:01:85:76:18:c6"
export CELL_BLUETOOTH_ADDRESS="00:C3:2E:AE:44:7D"
#-----------------------------#
# Script control              #
#-----------------------------#
export MY_EMAIL_ADDRESS="bucbowie@dea.gov"
export MY_EMAIL_PW="tscggvjtgmzlcaca"
export CAMERA_CNT_WIFI_ABSENT_MINUTES=4
export CAMERA_FOLDER_ROOT="/var/www/cam"
#-----------------------------#
# Meta Data                   #
#-----------------------------#
export CAMERA_FOLDER_VIDEOS="${CAMERA_FOLDER_ROOT}/media"
export CAMERA_FOLDER_SCRIPTS="${CAMERA_FOLDER_ROOT}/macros"
#-------------------------------------------------
 function common_error_report() {
#-------------------------------------------------
 num_arg=3                                        
 if [ $# -ne $((num_arg)) ]; then                 
   {                                              
       echo "Error! common_error_report was passed: $@" 
       in_object="common_error_report"              
       in_rc="8"                                  
       in_msg="Num. arguments was: $#, expecting: ${num_arg}" 
   }                                              
 else                                             
   {                                              
       in_object=$1                               
       in_rc=$2                                   
       in_msg=$3                                  
   }                                              
 fi                                               
 if [ ${in_rc} -gt 7  ] ; then                    
   {                                              
	echo "#########################################"
	echo "# Trapped Error                          "
	echo "# Aborting process in `echo $(basename -- $(readlink -f -- $0))`"
	echo "#########################################"
	echo "# Details                                " 
	echo "#---------------------------------------#" 
	echo "# Script: ${in_object}                   " 
	echo "# Return Code: ${in_rc}                  " 
	echo "# Message: ${in_msg}                     " 
	echo "#---------------------------------------#" 
	if [[ "${OPT_VERBOSE}" == "Y" ]]; then           
           {
		echo "# Processing information                 " 
		echo "#---------------------------------------#" 
		echo -e "# Bash information: -->\c"              
		STACK=""                                         
		local i                                          
		local stack_size=${#FUNCNAME[@]}                 
		for (( i=1; i<$stack_size ; i++ )); do           
		      local func="${FUNCNAME[$i]}"               
			      [ x$func = x ] && func=MAIN                
			      local linen="${BASH_LINENO[(( i - 1 ))]}"  
			      local src="${BASH_SOURCE[$i]}"             
			      [ x"$src" = x ] && src=non_file_source     
			      STACK+=$func" "$src" "$linen               
			      echo "${STACK}"                            
		done                                             
		echo "# Error reported by function: $FUNCNAME  " 
		echo "# Here is the trace of the function call:" 
		echo "# ${FUNCNAME[*]}                         " 
		TRACE=""                                         
		CP=$$                                            
		while true                                       
		    do
				CMDLINE=$(cat /proc/$CP/cmdline)         
				PP=$(grep PPid /proc/$CP/status | awk '{ print $2; }') 
				TRACE="$TRACE [$CP]:$CMDLINE\n"          
				if [ "$CP" == "1" ]; then                
					break                            
				fi                                       
				CP=$PP                                   
		    done                                             
		echo "#---------------------------------------#"
		echo "# Backtrace of `basename "$0"`:          "
		echo "#---------------------------------------#"
		echo -en "$TRACE" | tac | grep -n ":"
		echo "#########################################"
		}                                      
	 fi                                       
        [[ -f ${IN_PROGRESS} ]] && rm -f ${IN_PROGRESS}
        trap "exit 1" TERM                                
        export SWAT_PID=$$
        echo=$(swat_kill $SWAT_PID)
        return 8
   }                                              
 else                                             
   {                                              
        echo "#########################################" 
        echo "# ${mySCRIPT}:function=common_error_report" 
        echo "# ${in_object} has return code of: ${in_rc}" 
        echo "# Message: ${in_msg}                    "  
        echo "#---------------------------------------#" 
   }                                              
 fi                                               
 }
#-------------------------------------------------
 function swat_kill() {                           
#-------------------------------------------------
 [[ ! -z $1 ]] && export SWAT_PID=$1
  echo "##-----------------------------------------#"  
  echo "## function swat_kill cleaning up ${IN_PROGRESS}"  
  echo  "##-----------------------------------------#" 
 kill -s TERM $PPID ;kill -s TERM $SWAT_PID       
 [[ -f ${IN_PROGRESS} ]] && rm -f ${IN_PROGRESS}                              
}                                                 
###                              
